{"version":3,"sources":["assets/components/Navbar.js","assets/components/Footer/Footer.js","assets/images/food2.jpg","assets/components/Jumbotron.js","assets/components/CityCard.js","assets/components/CityList.js","assets/components/SearchCity.js","config/api.js","assets/pages/Home.js","assets/components/CategoryList.js","assets/components/SearchKeyword.js","assets/components/SearchCriteria.js","assets/components/RatingLabel.js","assets/components/RestaurantList.js","assets/pages/City.js","assets/components/RestaurantProfile.js","assets/components/Review.js","assets/pages/ResturantDetails.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Footer","style","background","padding","Jumbotron","backgroundImage","mainImage","CityCard","props","border","city","name","country_name","_renderCityList","listCities","length","map","index","CityList","title","showSubTitle","subtitle","SearchCity","borderRadius","placeholder","value","onChange","onClick","API","baseUrl","process","apiKey","Home","changeKeywordHandler","event","setState","keyword","target","searchHandler","state","url","Axios","get","headers","params","q","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeaturedCities","city_ids","featuredCities","this","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","width","criteriaName","aria-hidden","color","deleteCriteriaHandler","onClickSeacrh","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantList","marginBottom","src","restaurant","thumb","alt","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","restaurants","entity_id","entity_type","axios","transformCategoriesList","getCityData","city_id","newCriteria","push","filter","addToCriteriaHandler","splice","getCategoriesList","renderRestaurantList","match","RestaurantProfile","featured_image","votes","Review","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetails","getRestaurantDetails","restaurant_id","res_id","getReviewsData","reviews","user_reviews","marginTop","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","require","config"],"mappings":"yOAuBeA,EApBA,kBACX,sBAAKC,UAAU,iDAAf,UACA,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,wBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,iBAAiBC,gBAAc,gBAAgBC,gBAAc,QAAQC,aAAW,oBAApK,SACE,sBAAMP,UAAU,0BAGlB,qBAAKA,UAAU,2BAA2BQ,GAAG,gBAA7C,SACE,oBAAIR,UAAU,qBAAd,SACE,oBAAIA,UAAU,kBAAd,SACE,oBAAGA,UAAU,WAAWS,KAAK,IAA7B,iBACE,sBAAMT,UAAU,UAAhB,oCCwCGU,G,MAlDA,kBAEX,wBAAQV,UAAU,YAAlB,SACI,sBAAKA,UAAU,cAAf,UAEI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,kDACA,+BACI,6BAAI,mBAAGS,KAAK,IAAR,qBACJ,6BAAI,mBAAGA,KAAK,IAAR,gCAIZ,sBAAKT,UAAU,uBAAf,UACI,yCACA,+BACI,6BAAI,mBAAGS,KAAK,IAAR,mBACJ,6BAAI,mBAAGA,KAAK,IAAR,yBACJ,6BAAI,mBAAGA,KAAK,IAAR,4BAIZ,sBAAKT,UAAU,uBAAf,UACI,8CACA,+BACI,6BAAI,mBAAGS,KAAK,IAAR,2BACJ,6BAAI,mBAAGA,KAAK,IAAR,uCAMpB,sBAAKT,UAAU,kBAAf,UACI,mBAAGS,KAAK,IAAIT,UAAU,UAAtB,SAAgC,mBAAGA,UAAU,oBAC7C,mBAAGS,KAAK,IAAIT,UAAU,WAAtB,SAAiC,mBAAGA,UAAU,qBAC9C,mBAAGS,KAAK,IAAIT,UAAU,SAAtB,SAA+B,mBAAGA,UAAU,sBAGhD,qBAAKW,MAAO,CAAEC,WAAW,UAAWC,QAAQ,MAA5C,SACA,4EC7CG,MAA0B,kCCc1BC,EATG,kBACd,sBAAKd,UAAU,wBAAwBW,MAAO,CAAEI,gBAAgB,OAAD,OAAQC,EAAR,MAA/D,UACI,oBAAIhB,UAAU,uBAAd,mCACA,oBAAIA,UAAU,wBAAd,0DACA,mBAAGA,UAAU,uBAAb,gGACA,mBAAGA,UAAU,uBAAb,sFCOOiB,EAbE,SAAAC,GAAK,OAClB,qBAAKlB,UAAU,WAAf,SACA,qBAAKA,UAAU,qBAAqBW,MAAO,CAAEQ,OAAO,QAApD,SACE,sBAAKnB,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BkB,EAAME,KAAKC,OACvC,4BAAIH,EAAME,KAAKE,eACf,eAAC,IAAD,CAAMrB,GAAE,gBAAWiB,EAAME,KAAKZ,IAAMR,UAAU,YAA9C,gCAA8EkB,EAAME,KAAKC,gBCwB7FE,EAAkB,SAACC,GACvB,OAAGA,EAAWC,OAAS,EAEnBD,EAAWE,KAAI,SAAAC,GAAK,OAClB,cAAC,EAAD,CAAyBP,KAAMO,EAA/B,cAAeA,EAAMnB,OAKvB,qBAAKR,UAAU,MAAf,SACE,mBAAGA,UAAU,cAAb,+BAQO4B,EA9CE,SAAAV,GAAK,OAClB,qCACE,qBAAKlB,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,cAAf,UACI,oBAAIQ,GAAG,OAAP,SAAeU,EAAMW,SACG,IAAvBX,EAAMY,cAA4C,KAAnBZ,EAAMa,UACpC,qBAAI/B,UAAU,aAAd,wCAAuDkB,EAAMa,SAA7D,QAEF,8BAKR,qBAAK/B,UAAU,WAAf,SACuB,MAApBkB,EAAMM,WACH,qBAAKxB,UAAU,SAAf,SACE,8CAGLuB,EAAgBL,EAAMM,kBCYhBQ,EApCI,SAACd,GAAD,OACf,qBAAKlB,UAAU,WAAWW,MAAO,CAAEsB,aAAa,QAAhD,SACM,sBAAKjC,UAAU,YAAf,UACE,qBAAKA,UAAU,cAAf,SACE,+CAEF,qBAAKA,UAAU,OAAOW,MAAO,CAAEQ,OAAO,QAAtC,SACE,qBAAKnB,UAAU,YAAf,SACA,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,uBACMA,UAAU,eACVE,KAAK,OACLgC,YAAY,4BACZC,MAAOjB,EAAMiB,MACbC,SAAUlB,EAAMkB,WACtB,qBAAKpC,UAAU,qBAAf,SACE,wBACIA,UAAU,4BACVqC,QAASnB,EAAMmB,QACfnC,KAAK,SAHT,uC,gBCpBToC,EACD,CACJC,QAAUC,yCACVC,OAASD,oCC0HFE,E,kDAhHX,aAAc,IAAD,8BACT,gBAaFC,qBAAuB,SAACC,GACtB,EAAKC,SAAS,CAACC,QAASF,EAAMG,OAAOZ,SAf5B,EAqBVQ,qBAAuB,SAAAC,GACnB,EAAKC,SAAS,CAACC,QAAUF,EAAMG,OAAOZ,SAtBhC,EA4BVa,cAAgB,WACX,IAAIF,EAAU,EAAKG,MAAMH,QACrBI,EAAG,UAAMZ,EAAWC,QAAjB,WACPY,IAAMC,IAAIF,EAAK,CACXG,QAAU,CACN,WAAaf,EAAWG,QAE5Ba,OAAQ,CACJC,EAAIT,KAETU,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACa,YAAhBA,EAAKC,QACJ,EAAKb,SAAS,CACVc,mBAAoBF,EAAKG,qBACzBC,kBAAoBf,EACpBA,QAAU,QAGnBgB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA9CvB,EAiDVG,kBAAoB,WACf,IAAIhB,EAAG,UAAMZ,EAAWC,QAAjB,WAEPY,IAAMC,IAAIF,EAAK,CACXG,QAAU,CACN,WAAaf,EAAWG,QAE5Ba,OAAQ,CACJa,SAAW,oBAGlBX,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACc,YAAhBA,EAAKC,QACJ,EAAKb,SAAS,CAACuB,eAAeX,EAAKG,0BAG1CE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA/D9B,EAAKd,MAAQ,CACXH,QAAU,GACVsB,eAAiB,KACjBT,mBAAqB,KACrBE,kBAAoB,IANb,E,gEAqENQ,KAAKH,sB,+BAMR,OACI,qCACI,cAAC,EAAD,IAEA,sBAAKlE,UAAU,YAAf,UACI,cAAC,EAAD,CACIwB,WAAY6C,KAAKpB,MAAMmB,eACvBvC,MAAM,oBAGV,cAAC,EAAD,CACIM,MAAOkC,KAAKpB,MAAMH,QAClBT,QAASgC,KAAKrB,cACdZ,SAAUiC,KAAK1B,uBAIgB,OAAlC0B,KAAKpB,MAAMU,oBACR,cAAC,EAAD,CACInC,WAAY6C,KAAKpB,MAAMU,mBACvB9B,MAAO,gBACPC,cAAc,EACdC,SAAUsC,KAAKpB,MAAMY,8B,GAtG9BS,a,gBCcJC,EAnBM,SAAArD,GAAK,OAEtBA,EAAMsD,WACF,qBAAKxE,UAAU,aAAf,SACKkB,EAAMsD,WAAW9C,KAAI,SAAA+C,GAAQ,OAC1B,wBAEIzE,UAAW,0CAA4CkB,EAAMwD,kBAAoBxD,EAAMwD,iBAAiBlE,KAAOiE,EAASjE,GAAK,UAAY,IACzI6B,QAAS,kBAAMnB,EAAMyD,qBAAqBF,IAH9C,SAKSA,EAASpD,MAJToD,EAASjE,SAS1B,4CCeOoE,EA9BO,SAAA1D,GAAK,OACvB,qCACA,yCACA,qBAAKlB,UAAU,OAAf,SACI,qBAAKA,UAAU,YAAf,SACA,qBAAKA,UAAU,aAAf,SACU,sBAAKA,UAAU,cAAf,UACA,uBACMA,UAAU,eACVE,KAAK,OACLgC,YAAY,gEACZC,MAAOjB,EAAM4B,QACbV,SAAUlB,EAAMyB,uBAEpB,qBAAK3C,UAAU,qBAAf,SACA,wBACIA,UAAU,kBACVqC,QAASnB,EAAM2D,qBACf3E,KAAK,SAHT,4CCmBL4E,EAlCQ,SAAA5D,GAAK,OAExB,qBAAKlB,UAAU,0BAAf,SACA,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,aAAb,+CACA,uBAAOA,UAAU,oBAAjB,SACI,gCACKkB,EAAM6D,SAASrD,KAAI,SAACsD,EAAKrD,GAAN,OAChB,qBAAgB3B,UAAU,eAA1B,UACI,oBAAIiF,MAAM,MAAV,SAAiBD,EAAIE,eACrB,oBAAID,MAAM,MAAV,SAAiBD,EAAIvB,KAAKpC,OAC1B,oBAAI4D,MAAM,MAAV,SAC0B,SAArBD,EAAIE,cACL,mBACIlF,UAAU,cACVmF,cAAY,OACZxE,MAAO,CAAEyE,MAAM,OACf/C,QAAS,kBAAMnB,EAAMmE,sBAAsB1D,UAT9CA,UAkBrB,qBAAK3B,UAAU,aAAf,SACI,wBAAQA,UAAU,kBAAkBE,KAAK,SAASmC,QAASnB,EAAMoE,cAAjE,4BCdGC,EAbK,SAAArE,GAAK,OACrB,qBACIlB,UAAU,aACVW,MAAO,CACHyE,MAAO,QACPI,gBAAgB,IAAD,OAAMtE,EAAMuE,YAC3BC,YAAY,IAAD,OAAMxE,EAAMuE,aAL/B,SAOCvE,EAAMyE,QCgDIC,EAvDQ,SAAA1E,GAAK,OACpB,qBAAKlB,UAAU,WAAWW,MAAO,CAAEkF,aAAc,IAAjD,SACA,sBAAK7F,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,iBAAiB8F,IAAK5E,EAAM6E,WAAWC,MAAOC,IAAI,GAAGtF,MAAO,CAAEsB,aAAc,EAAGgD,MAAO,SAEzG,sBAAKjF,UAAU,WAAf,UACI,oBAAIA,UAAU,eAAeW,MAAO,CAAEuF,WAAY,KAAlD,SAA0DhF,EAAM6E,WAAW1E,OAC3E,6BAAKH,EAAM6E,WAAWI,SAASC,WAC/B,oBAAIpG,UAAU,aAAd,SAA4BkB,EAAM6E,WAAWI,SAASE,kBAI9D,qBAAKrG,UAAU,YAAf,SACI,uBAAOA,UAAU,QAAjB,SACI,kCACA,+BACI,wCACA,6BACA,cAAC,EAAD,CACIyF,WAAYvE,EAAM6E,WAAWO,YAAYC,aACzCZ,KAAI,UAAKzE,EAAM6E,WAAWO,YAAYE,iBAAlC,aAAuDtF,EAAM6E,WAAWO,YAAYG,YAApF,YAIZ,+BACI,0CACA,6BACCvF,EAAM6E,WAAWW,cAGtB,+BACI,8CACA,6BACCxF,EAAM6E,WAAWY,SAAW,IAAMzF,EAAM6E,WAAWa,iCAOhE,qBAAK5G,UAAU,cAAf,SACI,cAAC,IAAD,CAAMC,GAAE,sBAAiBiB,EAAM6E,WAAWvF,IAAMG,MAAO,CAAEkG,eAAgB,QAAzE,SACI,wBAAQ3G,KAAK,SAASF,UAAU,oCAAhC,+CCkLL8G,E,kDAvNX,aAAc,IAAD,8BACT,gBAYJ9D,cAAgB,WACZ,EAAKH,SAAS,CAACkE,YAAc,OAC7B,IAFkB,EAEd7D,EAAG,UAAMZ,EAAWC,QAAjB,WACHe,EAAS,GAHK,cAKH,EAAKL,MAAM8B,UALR,IAKlB,IAAI,EAAJ,qBAAmC,CAAC,IAA5BC,EAA2B,QAE/B,OAAOA,EAAIE,cACP,IAAK,OACD5B,EAAO0D,UAAYhC,EAAIvB,KAAKjD,GAC5B8C,EAAO2D,YAAc,OACrB,MACJ,IAAK,WACD3D,EAAOmB,SAAWO,EAAIvB,KAAKjD,GAC3B,MACJ,IAAK,UACD8C,EAAOC,EAAIyB,EAAIvB,KAAKpC,OAhBd,8BAuBlB6F,IAAM9D,IAAIF,EAAK,CACXG,QAAU,CACN,WAAaf,EAAWG,QAE5Ba,WACDE,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACN,EAAKZ,SAAS,CAACkE,YAActD,EAAKsD,iBACnCjD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA3CnB,EA8CboD,wBAA0B,SAAA3C,GAItB,OAH0BA,EAAW9C,KAAI,SAAA+C,GACrC,OAAOA,EAASD,eAhDX,EAqDb4C,YAAc,SAACC,GACX,IAAInE,EAAG,UAAMZ,EAAWC,QAAjB,WACP2E,IAAM9D,IAAIF,EAAK,CACXG,QAAU,CACN,WAAaf,EAAWG,QAE5Ba,OAAS,CACLa,SAAWkD,KAGlB7D,MAAK,YAAa,IACXpC,EADU,EAAVqC,KACYG,qBAAqB,GACjC0D,EAAc,CACdpC,aAAe,OACfzB,KAAMrC,GAEN2D,EAAQ,YAAO,EAAK9B,MAAM8B,UAC9BA,EAASwC,KAAKD,GAEd,EAAKzE,SAAS,CAACzB,OAAM2D,gBAExBjB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA1EjB,EAsFbpB,qBAAuB,SAAAC,GACnB,EAAKC,SAAS,CAACC,QAAQF,EAAMG,OAAOZ,SAvF3B,EA0FbwC,qBAAuB,SAAAF,GACnB,IAAIM,EAAQ,YAAO,EAAK9B,MAAM8B,UAE1BuC,EAAc,CACdpC,aAAc,WACdzB,KAAKgB,IAHTM,EAAWA,EAASyC,QAAO,SAAAxC,GAAG,MAA0B,aAArBA,EAAIE,iBAK9BqC,KAAKD,GAEd,EAAKzE,SAAS,CAAC6B,iBAAkBD,EAAUM,cAnGlC,EAsGb0C,qBAAuB,WACnB,IAAI1C,EAAQ,YAAO,EAAK9B,MAAM8B,UAC9BA,EAAWA,EAASyC,QAAO,SAAAxC,GAAG,MAAyB,YAArBA,EAAIE,gBACtC,IAAIoC,EAAc,CACdpC,aAAe,UACfzB,KAAO,CACHpC,KAAO,EAAK4B,MAAMH,UAI1BiC,EAASwC,KAAKD,GACd,EAAKzE,SAAS,CAAC,QAAY,GAAIkC,cAjHtB,EAqHbM,sBAAwB,SAAA1D,GACpB,IAAIoD,EAAQ,YAAO,EAAK9B,MAAM8B,UAC9BA,EAAS2C,OAAO/F,EAAM,GACtB,EAAKkB,SAAS,CAACkC,cAxHN,EA2Hb4C,kBAAoB,WAChB,IAAIzE,EAAG,UAAMZ,EAAWC,QAAjB,eACP2E,IAAM9D,IAAIF,EAAK,CACXG,QAAQ,CACJ,WAAaf,EAAWG,UAE7Be,MAAK,YAAa,IAAXC,EAAU,EAAVA,KAEFe,EAAa,EAAK2C,wBAAwB1D,EAAKe,YACnD,EAAK3B,SAAS,CAAC2B,kBAEhBV,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAtInB,EAyIb6D,qBAAuB,WACnB,OAA8B,OAA3B,EAAK3E,MAAM8D,YAEN,qBAAK/G,UAAU,MAAf,SACI,8CAKT,EAAKiD,MAAM8D,YAAYtF,OAAS,EAE3B,EAAKwB,MAAM8D,YAAYrF,KAAI,gBAAEqE,EAAF,EAAEA,WAAF,OACvB,cAAC,EAAD,CAEIA,WAAYA,GADPA,EAAWvF,OAOxB,qBAAKR,UAAU,MAAf,SACI,+FA5JZ,EAAKiD,MAAQ,CACT7B,KAAO,KACPoD,WAAY,KACZE,iBAAkB,KAClB5B,QAAU,GACViC,SAAS,GACTgC,YAAc,IART,E,gEA6EO,IACXM,EAAWhD,KAAKnD,MAAM2G,MAAMvE,OAA5B+D,QAELhD,KAAK+C,YAAYC,GAEjBhD,KAAKsD,sB,+BAkFA,IAAD,OACJ,OACG,sBAAK3H,UAAU,kBAAf,UAEEqE,KAAKpB,MAAM7B,MACP,qBAAKpB,UAAU,WAAf,SACA,qBAAKA,UAAU,MAAf,SACI,qBAAIA,UAAU,eAAd,2BAA4CqE,KAAKpB,MAAM7B,KAAKC,KAA5D,KAAoEgD,KAAKpB,MAAM7B,KAAKE,oBAKzF,sBAAKtB,UAAU,gBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,4CACA,cAAC,EAAD,CACIwE,WAAYH,KAAKpB,MAAMuB,WACvBE,iBAAkBL,KAAKpB,MAAMyB,iBAC7BC,qBAAsB,SAACF,GAAD,OAAc,EAAKE,qBAAqBF,SAGtE,sBAAKzE,UAAU,iBAAf,UACI,cAAC,EAAD,CACI8C,QAASuB,KAAKpB,MAAMH,QACpBH,qBAAsB0B,KAAK1B,qBAC3BkC,qBAAsBR,KAAKoD,uBAE/B,cAAC,EAAD,CACI1C,SAAUV,KAAKpB,MAAM8B,SACrBM,sBAAuB,SAAC1D,GAAD,OAAW,EAAK0D,sBAAsB1D,IAC7D2D,cAAgBjB,KAAKrB,gBAGzB,qBAAKhD,UAAU,gBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,oBAAIA,UAAU,eAAd,iCAIR,qBAAKA,UAAU,MAAf,SACKqE,KAAKuD,sC,GA/MftD,aCsDJwD,EA5DW,SAAA5G,GAAK,OAC3B,sBAAKlB,UAAU,OAAf,UACA,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACKkB,EAAM6E,WACH,qCACI,oBAAI/F,UAAU,eAAeW,MAAO,CAAEuF,WAAY,KAAlD,SAA0DhF,EAAM6E,WAAW1E,OAC3E,oBAAIV,MAAO,CAAEuF,WAAY,KAAzB,SAAiChF,EAAM6E,WAAWI,SAASC,WAC3D,oBAAIpG,UAAU,aAAd,SAA4BkB,EAAM6E,WAAWI,SAASE,aAG1D,kDAMhB,qBAAKrG,UAAU,YAAf,SACKkB,EAAM6E,WACH,sBAAK/F,UAAU,MAAf,UACA,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,iBAAiB8F,IAAK5E,EAAM6E,WAAWgC,eAAgB9B,IAAI,GAAGtF,MAAO,CAAEsB,aAAc,EAAGgD,MAAO,SAElH,qBAAKjF,UAAU,QAAf,SACI,uBAAOA,UAAU,QAAjB,SACQ,kCACQ,+BACI,wCACA,+BACA,cAAC,EAAD,CACIyF,WAAYvE,EAAM6E,WAAWO,YAAYC,aACzCZ,KAAI,UAAKzE,EAAM6E,WAAWO,YAAYE,iBAAlC,aAAuDtF,EAAM6E,WAAWO,YAAYG,YAApF,OAEJ,+BAAKvF,EAAM6E,WAAWO,YAAY0B,MAAlC,kBAGZ,+BACQ,0CACA,6BACK9G,EAAM6E,WAAWW,cAG9B,+BACQ,8CACA,6BACKxF,EAAM6E,WAAWY,SAAW,IAAMzF,EAAM6E,WAAWa,oCAQhF,iDC3BGqB,EA1BA,SAAA/G,GAAK,OAChB,qBAAKlB,UAAU,YAAYW,MAAO,CAAEsB,aAAa,GAAId,OAAO,QAA5D,SACI,sBAAKnB,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAMW,MAAO,CAAEkF,aAAc,IAA5C,UACI,qBAAK7F,UAAU,QAAQW,MAAO,CAAEQ,OAAQ,mBAAxC,SACI,qBAAKnB,UAAU,iBAAiB8F,IAAK5E,EAAMgH,OAAOC,KAAKC,cAAenC,IAAI,GAAGtF,MAAO,CAAEsB,aAAc,MAAOgD,MAAO,QAEtH,sBAAKjF,UAAU,SAASW,MAAO,CAAEQ,OAAQ,mBAAzC,UACI,oBAAInB,UAAU,mBAAd,SAAkCkB,EAAMgH,OAAOC,KAAK9G,OACpD,cAAC,EAAD,CACIsE,KAAI,UAAKzE,EAAMgH,OAAOC,KAAKE,iBAAvB,aAA4CnH,EAAMgH,OAAOC,KAAKG,aAA9D,KACJ7C,WAAU,UAAKvE,EAAMgH,OAAOC,KAAKI,sBAI7C,oBAAIvI,UAAU,uBAAd,SAAsCkB,EAAMgH,OAAOM,uBACnD,cAAC,EAAD,CACI7C,KAAI,UAAKzE,EAAMgH,OAAOO,OAAlB,aAA6BvH,EAAMgH,OAAOzB,YAA1C,KACJhB,WAAU,UAAKvE,EAAMgH,OAAO3B,gBAEhC,mBAAGvG,UAAU,YAAb,SAA0BkB,EAAMgH,OAAOQ,oBCwEpCC,E,kDAtFX,aAAe,IAAD,8BACV,gBAQJC,qBAAuB,SAAAC,GACnB,IAAI3F,EAAG,UAAMZ,EAAWC,QAAjB,eAEP2E,IAAM9D,IAAIF,EAAK,CACXG,QAAU,CACN,WAAaf,EAAWG,QAE5Ba,OAAS,CACLwF,OAASD,KAEdrF,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACN,EAAKZ,SAAS,CAACkD,WAAWtC,OAC3BK,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OArBlB,EAwBdgF,eAAiB,SAACF,GACd,IAAI3F,EAAG,UAAMZ,EAAWC,QAAjB,YAEP2E,IAAM9D,IAAIF,EAAK,CACXG,QAAU,CACN,WAAaf,EAAWG,QAE5Ba,OAAS,CACLwF,OAASD,KAEdrF,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACN,EAAKZ,SAAS,CAACmG,QAAUvF,EAAKwF,kBAC/BnF,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAlC5B,EAAKd,MAAQ,CACT8C,WAAa,KACbiD,QAAU,MAJJ,E,gEAyCO,IACZ1F,EAAUe,KAAKnD,MAAM2G,MAArBvE,OACLe,KAAKuE,qBAAqBtF,EAAOuF,eAEjCxE,KAAK0E,eAAezF,EAAOuF,iB,+BAI3B,OACI,mCACA,sBAAK7I,UAAU,kBAAkBW,MAAO,CAAEuI,UAAW,GAAIrD,aAAc,IAAvE,UACI,qBAAK7F,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAYW,MAAO,CAAEkF,aAAc,IAAlD,SACI,cAAC,EAAD,CACIE,WAAY1B,KAAKpB,MAAM8C,iBAInC,qBAAK/F,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,oBAAIA,UAAU,eAAd,uBAGJ,qBAAKA,UAAU,YAAf,SACCqE,KAAKpB,MAAM+F,QACJ3E,KAAKpB,MAAM+F,QAAQtH,KAAI,gBAAEwG,EAAF,EAAEA,OAAF,OACnB,cAAC,EAAD,CAEIA,OAAQA,GADHA,EAAO1H,OAKpB,6D,GA5EA8D,a,OCiBf6E,E,uKAbb,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5G,IACjC,cAAC,IAAD,CAAO0G,KAAK,iBAAiBE,UAAWxC,IACxC,cAAC,IAAD,CAAOsC,KAAK,6BAA6BE,UAAWX,IACtD,cAAC,EAAD,W,GATUrE,aCGHiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjG,MAAK,YAAkD,IAA/CkG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,IAGAa,EAAQ,IAAUC,W","file":"static/js/main.8c7c13c2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n    <Link className=\"navbar-brand\" to=\"/\">Dapur Emak</Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor01\" aria-controls=\"navbarColor01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item active\">\n          <a className=\"nav-link\" href=\"/\">Home\n            <span className=\"sr-only\">(current)</span>\n          </a>\n        </li>\n        \n      </ul>\n    </div>\n  </nav>\n);\n\nexport default Navbar;","import React from 'react';\nimport \"./footer.css\";\n\n\nconst Footer = () => (\n\n    <footer className=\"my-footer\">\n        <div className=\"text-center\">\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4 text-center\">\n                        <h5>About Dapur Emak</h5>\n                        <ul>\n                            <li><a href=\"/\">About</a></li>\n                            <li><a href=\"/\">Contact Us</a></li>\n                        </ul>\n                    </div>\n\n                    <div className=\"col-sm-4 text-center\">\n                        <h5>Support</h5>\n                        <ul>\n                            <li><a href=\"/\">FAQ</a></li>\n                            <li><a href=\"/\">Help Desk</a></li>\n                            <li><a href=\"/\">Forums</a></li>\n                        </ul>\n                    </div>\n\n                    <div className=\"col-sm-4 text-center\">\n                        <h5>Download App</h5>\n                        <ul>\n                            <li><a href=\"/\">Google Play</a></li>\n                            <li><a href=\"/\">Apple Storek</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"social-networks\">\n                <a href=\"/\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\n                <a href=\"/\" className=\"facebook\"><i className=\"fa fa-facebook\"></i></a>\n                <a href=\"/\" className=\"google\"><i className=\"fa fa-google\"></i></a>\n            </div>\n\n            <div style={{ background:\"#282c35\", padding:\"1%\" }}>\n            <span>Copyright &copy; 2020 Dapur Emak </span>\n\n            </div>\n        </div>\n    </footer>\n\n);\n\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/food2.9e657e48.jpg\";","import React from 'react';\nimport mainImage from \"../images/food2.jpg\";\n\n\n\nconst Jumbotron = () => (\n    <div className=\"jumbotron text-center\" style={{ backgroundImage:`url(${mainImage})` }}>\n        <h1 className=\"display-3 text-white\">Welcome to Dapur Emak</h1>\n        <h4 className=\"card-title text-white\">The Easiest Way to Find Restaurants and Food</h4>\n        <p className=\"card-text text-white\">You can grab information aboht restaurants, cafees, cuisines with just a few click</p>\n        <p className=\"card-text text-white\">Start by choosing the featured cities below, or search the city name</p>\n    </div>\n);\n\nexport default Jumbotron;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst CityCard = props => (\n    <div className=\"col-lg-4\">\n    <div className=\"card bg-white mb-3\" style={{ border:\"none\" }}>\n      <div className=\"card-body\">\n          <h4 className=\"card-title\">{props.city.name}</h4>\n          <p>{props.city.country_name}</p>\n          <Link to={`/city/${props.city.id}`} className=\"card-text\">See restaurants in {props.city.name}</Link>\n      </div>\n\n    </div>\n  </div>\n);\n\nexport default CityCard;","import React from 'react';\nimport CityCard from './CityCard';\n\n\n\n\nconst CityList = props => (\n    <>\n      <div className=\"row mb-3\">\n        <div className=\"col-lg-12\">\n          <div className=\"page-header\">\n              <h3 id=\"navs\">{props.title}</h3>\n              {props.showSubTitle === true && props.subtitle !== '' && \n                <h6 className=\"text-muted\">Search Result for keyword '{props.subtitle}' </h6>  \n              }\n              <hr></hr>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row mb-5\">\n        {props.listCities == null ? (\n            <div className=\"col-lg\"> \n              <p>Loading....</p>\n            </div>\n        ) : (\n         _renderCityList(props.listCities)\n        )}\n\n      </div>\n    </>\n);\n\n// function result null\nconst _renderCityList = (listCities) => {\n  if(listCities.length > 0) {\n    return (\n      listCities.map(index =>  \n        <CityCard key={index.id} city={index}> </CityCard>\n      )\n    );\n  }else{\n    return (\n      <div className=\"col\">\n        <p className=\"text-danger\">Data Not Found</p>\n      </div>\n    );\n  }\n}\n\n\n\nexport default CityList;","import React from 'react';\n\nconst SearchCity = (props) => (\n    <div className=\"row mb-5\" style={{ borderRadius:\"10px\" }}> \n          <div className=\"col-lg-12\">\n            <div className=\"page-header\">\n              <h3>Search City</h3>\n            </div>\n            <div className=\"card\" style={{ border:\"none\" }}>\n              <div className=\"card-body\">\n              <div className=\"form-group\">\n                <div className=\"form-group\">\n                  <div className=\"input-group\">\n                    <input \n                          className=\"form-control\" \n                          type=\"text\" \n                          placeholder=\"Type Keyword or City Name\" \n                          value={props.value} \n                          onChange={props.onChange} />\n                    <div className=\"input-group-append\">\n                      <button \n                          className=\"btn btn-primary btn-block\"\n                          onClick={props.onClick}\n                          type=\"button\">\n                            Search\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  \n);\n\n\nexport default SearchCity;","export const API = {\n    zomato: {\n        baseUrl : process.env.REACT_APP_API_ZOMATO,\n        apiKey : process.env.REACT_APP_KEY_ZOMATO,\n\n    }\n}","import React, { Component } from \"react\";\nimport Jumbotron from '../components/Jumbotron';\nimport CityList from '../components/CityList';\nimport SearchCity from \"../components/SearchCity\";\nimport Axios from \"axios\";\nimport {API} from '../../config/api';\n\n\nclass Home extends Component {\n\n    /**\n     * Counstructor for searching\n     */\n    constructor(){\n        super();\n        this.state = {\n          keyword : \"\",\n          featuredCities : null, //variable temp cities\n          citiesResultSearch : null, //state result\n          cityKeywordSearch : '', //variable value after search city\n        }\n      };\n\n    /**\n     * function onchange for search data\n     * @param {*} event \n     */\n      changeKeywordHandler = (event) => {\n        this.setState({keyword: event.target.value});\n      };\n\n      /**\n       * Method Handler axios from api zomato\n       */\n       changeKeywordHandler = event => {\n           this.setState({keyword : event.target.value});\n       };\n\n       /**\n        * Function click in search\n        */\n       searchHandler = () => {\n            let keyword = this.state.keyword;\n            let url = `${API.zomato.baseUrl}/cities`\n            Axios.get(url, {\n                headers : {\n                    'user-key' : API.zomato.apiKey,\n                },\n                params: {\n                    q : keyword,\n                }\n            }).then(({data}) => {\n                if(data.status === 'success'){\n                    this.setState({\n                        citiesResultSearch: data.location_suggestions, \n                        cityKeywordSearch : keyword, \n                        keyword : '',\n                    });\n                }\n            }).catch(err => console.log(err));\n       };\n \n       getFeaturedCities = () => {\n            let url = `${API.zomato.baseUrl}/cities`\n\n            Axios.get(url, {\n                headers : {\n                    'user-key' : API.zomato.apiKey,\n                },\n                params: {\n                    city_ids : '74, 11052, 170'\n                }\n            })\n            .then(({ data }) => {\n                if(data.status === 'success'){\n                    this.setState({featuredCities:data.location_suggestions})\n                }\n            })\n            .catch(err => console.log(err));\n       };\n\n       componentDidMount(){\n           this.getFeaturedCities();\n       }\n\n    render () {\n\n\n        return (\n            <>\n                <Jumbotron></Jumbotron>\n  \n                <div className=\"container\">\n                    <CityList \n                        listCities={this.state.featuredCities} \n                        title=\"Featured Cities\">\n                    </CityList>\n\n                    <SearchCity \n                        value={this.state.keyword} \n                        onClick={this.searchHandler}\n                        onChange={this.changeKeywordHandler}> \n                    </SearchCity>\n\n\n                    {this.state.citiesResultSearch !== null && (\n                        <CityList \n                            listCities={this.state.citiesResultSearch} \n                            title={\"Search Result\"}\n                            showSubTitle={true}\n                            subtitle={this.state.cityKeywordSearch}\n                            >\n                         </CityList>\n                    )}\n                    \n                </div>\n  \n            </>\n        );\n    };\n\n\n}\n\n\nexport default Home;","import React from 'react';\n\n\nconst CategoryList = props => (\n\n    props.categories ? (\n        <div className=\"list-group\">\n            {props.categories.map(category => (\n                <button \n                    key={category.id}\n                    className={'list-group-item list-group-item-action' + (props.categorySelected && props.categorySelected.id === category.id ? ' active' : '')}\n                    onClick={() => props.categoryClickHandler(category)}\n                    >\n                        {category.name}\n                </button>\n            ))}\n        </div>\n    ) : (\n        <p>Loading...</p>\n    )\n)\n\nexport default CategoryList;","import React from 'react';\n\n\nconst SearchKeyword = props => (\n    <>\n    <h5>Keyword</h5>\n    <div className=\"card\">\n        <div className=\"card-body\">\n        <div className=\"form-group\">\n                  <div className=\"input-group\">\n                  <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        placeholder=\"Type keyword i.e : restaurant's name, location, cuisine, etc.\"\n                        value={props.keyword}\n                        onChange={props.changeKeywordHandler}\n                    />\n                    <div className=\"input-group-append\">\n                    <button\n                        className=\"btn btn-primary\"\n                        onClick={props.onClickAddToCriteria}\n                        type=\"button\"\n                    >\n                        Add to criteria\n                    </button>\n                    </div>\n                  </div>\n                </div>\n        </div>\n    </div>\n</>\n);\n\nexport default SearchKeyword;","import React from 'react';\n\n\nconst SearchCriteria = props => (\n\n    <div className=\"card bg-white mb-3 mt-4\">\n    <div className=\"card-body\">\n        <p className=\"card-title\">Find Restaurant based on Criteria</p>\n        <table className=\"table table-hover\">\n            <tbody>\n                {props.criteria.map((cri, index) => (\n                    <tr key={index} className=\"table-active\" >\n                        <td width=\"40%\">{cri.criteriaName}</td>\n                        <td width=\"50%\">{cri.data.name}</td>\n                        <td width=\"10%\">\n                            {cri.criteriaName !== 'City' && (\n                            <i \n                                className=\"fa fa-times\" \n                                aria-hidden=\"true\" \n                                style={{ color:'red' }}\n                                onClick={() => props.deleteCriteriaHandler(index)}\n                                ></i>\n\n                            )}\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n        <div className=\"pull-right\">\n            <button className=\"btn btn-primary\" type=\"button\" onClick={props.onClickSeacrh}>Search</button>\n        </div>\n    </div>\n</div>\n);\n\n\nexport default SearchCriteria;","import React from 'react';\n\n\nconst RatingLabel = props => (\n    <div \n        className=\"btn btn-sm\"\n        style={{\n            color: 'white',\n            backgroundColor: `#${props.labelColor}`,\n            borderColor: `#${props.labelColor}`,\n        }}>\n    {props.text}\n        \n    </div>\n)\n\nexport default RatingLabel;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport RatingLabel from './RatingLabel';\n\nconst RestaurantList = props => (\n        <div className=\"col-lg-6\" style={{ marginBottom: 20 }}>\n        <div className=\"card\">\n            <div className=\"card-header\">\n            <div className=\"row\">\n                <div className=\"col-lg-3\">\n                    <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{ borderRadius: 5, width: 100 }} ></img>\n                </div>\n                <div className=\"col-lg-9\">\n                    <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\n                    <h6>{props.restaurant.location.locality}</h6>\n                    <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n                </div>\n            </div>\n            </div>\n            <div className=\"card-body\">\n                <table className=\"table\">\n                    <tbody>\n                    <tr>\n                        <td>Rating</td>\n                        <td>\n                        <RatingLabel \n                            labelColor={props.restaurant.user_rating.rating_color}\n                            text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Cuisines</td>\n                        <td>\n                        {props.restaurant.cuisines}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Cost for two</td>\n                        <td>\n                        {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n\n            <div className=\"card-footer\">\n                <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\n                    <button type=\"button\" className=\"btn btn-outline-success btn-block\">\n                    View Restaurant Details\n                    </button>\n                </Link>\n            </div>\n        </div>\n        </div>\n\n);\n\nexport default RestaurantList;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {API} from '../../config/api';\nimport CategoryList from '../components/CategoryList';\nimport SearchKeyword from '../components/SearchKeyword';\nimport SearchCriteria from '../components/SearchCriteria';\nimport RestaurantList from '../components/RestaurantList';\n// import {Link} from 'react-router-dom';\n\nclass City extends Component {\n\n\n    constructor(){\n        super();\n        this.state = {\n            city : null,\n            categories: null,\n            categorySelected: null,\n            keyword : '',\n            criteria:[],\n            restaurants : [],\n\n        };\n    }\n\n    searchHandler = () => {\n        this.setState({restaurants : null});\n        let url = `${API.zomato.baseUrl}/search`;\n        let params = {};\n\n        for(let cri of this.state.criteria){\n\n            switch(cri.criteriaName) {\n                case 'City' : \n                    params.entity_id = cri.data.id;\n                    params.entity_type = 'city';\n                    break;\n                case 'Category' : \n                    params.category = cri.data.id;\n                    break;\n                case 'Keyword' : \n                    params.q = cri.data.name;\n                    break;\n                \n                default : break;\n            }\n        }\n\n        axios.get(url, {\n            headers : {\n                'user-key' : API.zomato.apiKey,\n            },\n            params,\n        }).then(({data}) => {\n            this.setState({restaurants : data.restaurants})\n        }).catch(err => console.log(err));\n    }\n\n    transformCategoriesList = categories => {\n        let categoriesTransform = categories.map(category => {\n            return category.categories;\n        })\n        return categoriesTransform;\n    }\n\n    getCityData = (city_id) => {\n        let url = `${API.zomato.baseUrl}/cities`;\n        axios.get(url, {\n            headers : {\n                'user-key' : API.zomato.apiKey\n            },\n            params : {\n                city_ids : city_id\n            }\n        })\n        .then(({data}) => {\n            let city = data.location_suggestions[0];\n            let newCriteria = {\n                criteriaName : 'City',\n                data :city,\n            };\n            let criteria = [...this.state.criteria];\n            criteria.push(newCriteria);\n            \n            this.setState({city, criteria})\n        })\n        .catch(err => console.log(err));\n    };\n\n    componentDidMount(){\n        let {city_id} = this.props.match.params;\n        // console.log(this.props.match);\n        this.getCityData(city_id);\n\n        this.getCategoriesList();\n       \n    }\n\n    changeKeywordHandler = event => {\n        this.setState({keyword:event.target.value});\n    }\n\n    categoryClickHandler = category => {\n        let criteria = [...this.state.criteria];\n        criteria = criteria.filter(cri  => cri.criteriaName !== \"Category\")\n        let newCriteria = {\n            criteriaName: 'Category',\n            data:category,\n        }\n        criteria.push(newCriteria);\n\n        this.setState({categorySelected: category, criteria});\n    }\n\n    addToCriteriaHandler = () => {\n        let criteria = [...this.state.criteria];\n        criteria = criteria.filter(cri => cri.criteriaName !== \"Keyword\");\n        let newCriteria = {\n            criteriaName : 'Keyword',\n            data : {\n                name : this.state.keyword,\n            }\n        }\n\n        criteria.push(newCriteria);\n        this.setState({'keyword' : '', criteria})\n\n    }\n\n    deleteCriteriaHandler = index => {\n        let criteria = [...this.state.criteria];\n        criteria.splice(index,1);\n        this.setState({criteria});\n    }\n\n    getCategoriesList = () => {\n        let url = `${API.zomato.baseUrl}/categories`;\n        axios.get(url, {\n            headers:{\n                'user-key' : API.zomato.apiKey\n            }\n        }).then(({data}) => {\n            // get categorisTransform\n            let categories = this.transformCategoriesList(data.categories);\n            this.setState({categories});\n\n        }).catch(err => console.log(err));\n    }\n\n    renderRestaurantList = () => {\n        if(this.state.restaurants === null){\n            return (\n                <div className=\"col\">\n                    <p>Loading ...</p>\n                </div>\n            )\n        }\n\n        if(this.state.restaurants.length > 0){\n            return (\n                this.state.restaurants.map(({restaurant}) => (\n                    <RestaurantList \n                        key={restaurant.id} \n                        restaurant={restaurant}\n                    />\n                ))\n            )\n        }else{\n            return (\n                <div className=\"col\">\n                    <p>Data not available, please select category and click search</p>\n                </div>\n            )\n        }\n    }\n\n    render(){\n        return (\n           <div className=\"container-fluid\">\n\n            {this.state.city && (\n                 <div className=\"row mt-4\">\n                 <div className=\"col\">\n                     <h4 className=\"text-success\">Restaurant in {this.state.city.name}, {this.state.city.country_name}</h4>\n                 </div>\n             </div>\n            )}\n\n                <div className=\"row mt-4 mb-4\">\n                    <div className=\"col-lg-2 mb-2\">\n                        <h5>Categories</h5>\n                        <CategoryList\n                            categories={this.state.categories}\n                            categorySelected={this.state.categorySelected}\n                            categoryClickHandler={(category) => this.categoryClickHandler(category)}\n                        />\n                    </div>\n                    <div className=\"col-lg-10 mb-2\">\n                        <SearchKeyword \n                            keyword={this.state.keyword}\n                            changeKeywordHandler={this.changeKeywordHandler}\n                            onClickAddToCriteria={this.addToCriteriaHandler}\n                        />\n                        <SearchCriteria\n                            criteria={this.state.criteria}\n                            deleteCriteriaHandler={(index) => this.deleteCriteriaHandler(index)}\n                            onClickSeacrh= {this.searchHandler}\n                            />\n\n                        <div className=\"row mb-4 mt-2\">\n                            <div className=\"col\">\n                                <h4 className=\"text-success\">Restaurant List</h4>\n                            </div>\n                        </div>\n                        \n                        <div className=\"row\">\n                            {this.renderRestaurantList()}\n                        </div>\n                    </div>\n                </div>\n\n               \n           </div>\n        );\n    }\n}\n\nexport default City;","import React from 'react';\nimport RatingLabel from './RatingLabel';\n\nconst RestaurantProfile = props => (\n    <div className=\"card\">\n    <div className=\"card-header\">\n        <div className=\"row\">\n            <div className=\"col\">\n                {props.restaurant ? (\n                    <>\n                        <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\n                        <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\n                        <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\n                    </>\n                ) : (\n                    <p>Loading ...</p>\n                )}\n                \n            </div>\n        </div>\n    </div>\n    <div className=\"card-body\">\n        {props.restaurant ? (\n            <div className=\"row\">\n            <div className=\"col-6\">\n                <img className=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} ></img>\n            </div>\n            <div className=\"col-6\">\n                <table className=\"table\">\n                        <tbody>\n                                <tr>\n                                    <td>Rating</td>\n                                    <td>\n                                    <RatingLabel \n                                        labelColor={props.restaurant.user_rating.rating_color}\n                                        text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\n                                        />\n                                        <h6>{props.restaurant.user_rating.votes} Votes</h6>\n                                    </td>\n                            </tr>\n                            <tr>\n                                    <td>Cuisines</td>\n                                    <td>\n                                        {props.restaurant.cuisines}\n                                    </td>\n                            </tr>\n                            <tr>\n                                    <td>Cost for two</td>\n                                    <td>\n                                        {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\n                                    </td>\n                            </tr>\n                        </tbody>\n                </table>\n            </div>\n            </div>\n        ) : (\n            <p>Loading ..</p>\n        )}\n    </div>\n</div>\n);\n\nexport default RestaurantProfile;","import React from 'react';\nimport RatingLabel from './RatingLabel';\n\n\nconst Review = props => (\n    <div className=\"card mb-3\" style={{ borderRadius:10, border:\"none\" }}>\n        <div className=\"card-body\">\n            <div className=\"row\" style={{ marginBottom: 20 }}>\n                <div className=\"col-1\" style={{ border: '0px solid black' }}>\n                    <img className=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>\n                </div>\n                <div className=\"col-11\" style={{ border: '0px solid black' }}>\n                    <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\n                    <RatingLabel\n                        text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\n                        labelColor={`${props.review.user.foodie_color}`}\n                    />\n                </div>\n            </div>\n            <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\n            <RatingLabel\n                text={`${props.review.rating} (${props.review.rating_text})`}\n                labelColor={`${props.review.rating_color}`}\n            />\n            <p className=\"card-text\">{props.review.review_text}</p>\n        </div>\n    </div>\n);\n\n\nexport default Review;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {API} from '../../config/api';\nimport RestaurantProfile from '../components/RestaurantProfile';\nimport Review from '../components/Review';\n\n\n\nclass RestaurantDetails extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            restaurant : null,\n            reviews : null,\n        }\n    }\n\n\n    getRestaurantDetails = restaurant_id => {\n        let url = `${API.zomato.baseUrl}/restaurant`;\n\n        axios.get(url, {\n            headers : {\n                'user-key' : API.zomato.apiKey,\n            },\n            params : {\n                res_id : restaurant_id,\n            },\n        }).then(({data}) => {\n            this.setState({restaurant:data});\n        }).catch(err => console.log(err));\n    }\n\n    getReviewsData = (restaurant_id) => {\n        let url = `${API.zomato.baseUrl}/reviews`;\n\n        axios.get(url, {\n            headers : {\n                'user-key' : API.zomato.apiKey,\n            },\n            params : {\n                res_id : restaurant_id,\n            }\n        }).then(({data}) => {\n            this.setState({reviews : data.user_reviews})\n        }).catch(err => console.log(err));\n\n    }\n\n\n    componentDidMount() {\n        let {params} = this.props.match;\n        this.getRestaurantDetails(params.restaurant_id);\n\n        this.getReviewsData(params.restaurant_id);\n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"container-fluid\" style={{ marginTop: 30, marginBottom: 30 }}>\n                <div className=\"row\">\n                    <div className=\"col-lg-12\" style={{ marginBottom: 20 }}>\n                        <RestaurantProfile \n                            restaurant={this.state.restaurant}\n                        />\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12 mb-4\">\n                            <h4 className=\"text-success\">Reviews</h4>\n                        </div>\n                    \n                        <div className=\"col-lg-12\">\n                        {this.state.reviews ? (\n                                this.state.reviews.map(({review}) => (\n                                    <Review \n                                        key={review.id}\n                                        review={review}\n                                    />\n                                ))\n                            ) : (\n                                <p>Loading ... </p>\n                            )\n                            }\n                        </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default RestaurantDetails;","import React, { Component } from \"react\";\nimport Navbar from './assets/components/Navbar';\nimport Footer from \"./assets/components/Footer/Footer\";\nimport Home from \"./assets/pages/Home\";\nimport City from './assets/pages/City';\nimport RestaurantDetails from './assets/pages/ResturantDetails';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; \n\n\nclass App extends Component{\n  render(){\n   \n    return(\n      <Router>\n        <Navbar></Navbar>\n          <Route path=\"/\" exact component={Home}></Route>\n          <Route path=\"/city/:city_id\" component={City}></Route>\n          <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetails}></Route>\n        <Footer></Footer>\n      </Router>\n    );\n  };\n  \n  }\n  \n  export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// function include env \nrequire(\"dotenv\").config()"],"sourceRoot":""}